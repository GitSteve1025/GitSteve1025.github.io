<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Frieren Beyond Journey&#39;s End</title>
      <link href="/2023/12/02/Frieren%20Beyond%20Journey&#39;s%20End%20Solution/"/>
      <url>/2023/12/02/Frieren%20Beyond%20Journey&#39;s%20End%20Solution/</url>
      
        <content type="html"><![CDATA[<h1 id="Frieren-Beyond-Journey’s-End-Solution"><a href="#Frieren-Beyond-Journey’s-End-Solution" class="headerlink" title="Frieren Beyond Journey’s End Solution"></a>Frieren Beyond Journey’s End Solution</h1><p>考虑对a前缀和得s<br>$$<br>\sum_{i&#x3D;1}^{n}\sum_{l&#x3D;1}^{i}\sum_{r&#x3D;i}^{n}\sum_{k&#x3D;l}^{r}a_k &#x3D; \sum_{i&#x3D;1}^{n}\sum_{l&#x3D;1}^{i}\sum_{r&#x3D;i}^{n}(s[r] - s[l - 1]) \</p><p>&#x3D; \sum_{i&#x3D;1}^{n}(\sum_{l&#x3D;1}^{i}\sum_{r&#x3D;i}^ns[r] - \sum_{l&#x3D;1}^{i}\sum_{r&#x3D;i}^ns[l - 1]) &#x3D; \sum_{i&#x3D;1}^{n}(\sum_{l&#x3D;1}^{i}\sum_{r&#x3D;i}^ns[r] - \sum_{r&#x3D;i}^{n}\sum_{l&#x3D;1}^is[l - 1]) \</p><p>&#x3D; \sum_{i&#x3D;1}^{n}(i  * \sum_{r&#x3D;i}^ns[r] - (n - i + 1) * \sum_{l&#x3D;1}^is[l - 1])\<br>$$<br>可以看出这两公式又可以前缀和 即对s前缀和得ss<br>$$<br>\sum_{r&#x3D;i}^ns[r] &#x3D; ss[n] - ss[i - 1] \<br>\sum_{l&#x3D;1}^is[l - 1] &#x3D;  \sum_{l&#x3D;0}^{i - 1}s[l] &#x3D; ss[i - 1]\<br>$$<br>带入进去<br>$$<br>&#x3D; \sum_{i&#x3D;1}^{n}(i * (ss[n] - ss[i - 1]) - (n - i + 1) * ss[i - 1])<br>$$<br>这个是公式变量只有 $i$， $O(N)$ 累加即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> p = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> T = <span class="number">1</span>;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">val</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">long</span> <span class="type">long</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">ss</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">cin &gt;&gt; val[i];</span><br><span class="line">s[i] = (s[i - <span class="number">1</span>] + val[i]) % p;</span><br><span class="line">ss[i] = (ss[i - <span class="number">1</span>] + s[i]) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">res += (ss[n] - ss[i - <span class="number">1</span>]) * i - ss[i - <span class="number">1</span>] * (n - i + <span class="number">1</span>);</span><br><span class="line">res %= p;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (res % p + p) % p &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂度$O(T * n)$</p><h1 id="杂记"><a href="#杂记" class="headerlink" title="杂记"></a>杂记</h1><p>本道题在比赛两次被删， 在第三场比赛才放上去，呜呜，赛时过了4个（大佬前几场打了，后面就不打了，来了几个，估计是他们做出来的），本题是在学习单调栈时想到的题，用了该题的公式，简化了该题</p><p><a href="https://leetcode.cn/problems/sum-of-total-strength-of-wizards/">2281. 巫师的总力量和 - 力扣（LeetCode）</a></p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> SCUT校赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frieren and Rotating Calipers Solution</title>
      <link href="/2023/12/02/Frieren%20and%20Rotating%20Calipers%20Solution/"/>
      <url>/2023/12/02/Frieren%20and%20Rotating%20Calipers%20Solution/</url>
      
        <content type="html"><![CDATA[<h1 id="Frieren-and-Rotating-Calipers-Solution"><a href="#Frieren-and-Rotating-Calipers-Solution" class="headerlink" title="Frieren and Rotating Calipers Solution"></a>Frieren and Rotating Calipers Solution</h1><p>由题矩形长和宽需要与$x$轴或 $y$轴平行</p><p>找到最大，最小的$x$， $y$记为$max_x, min_x, max_y, min_y$</p><p>答案$(max_x - min_x) * (max_y - min_y)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">x</span><span class="params">(n)</span>, <span class="title">y</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> max_x = *<span class="built_in">max_element</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> max_y = *<span class="built_in">max_element</span>(y.<span class="built_in">begin</span>(), y.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> min_x = *<span class="built_in">min_element</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> min_y = *<span class="built_in">min_element</span>(y.<span class="built_in">begin</span>(), y.<span class="built_in">end</span>());</span><br><span class="line">        cout &lt;&lt; (max_x - min_x) * (max_y - min_y) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂度$O(T * n)$</p><h1 id="杂记"><a href="#杂记" class="headerlink" title="杂记"></a>杂记</h1><p>学习旋转卡壳时想到的签到题，赛时凡过题者都过了这题</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> SCUT校赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在blog写作</title>
      <link href="/2023/12/02/Write%20On%20Hexo/"/>
      <url>/2023/12/02/Write%20On%20Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="在blog写作"><a href="#在blog写作" class="headerlink" title="在blog写作"></a>在blog写作</h1><h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><p>正常写完md后 放到post下</p><p><strong>注意md Front-matter</strong></p><p><a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter | Hexo</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br></pre></td></tr></table></figure><p>然后本地启动就可以看到文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s </span><br></pre></td></tr></table></figure><p>上传到自己的网站要部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">常用命令</th><th align="left">简写</th><th align="left">中文含义</th></tr></thead><tbody><tr><td align="left">hexo server</td><td align="left">hexo s</td><td align="left">本地启动</td></tr><tr><td align="left">hexo generate</td><td align="left">hexo g</td><td align="left">生成静态文件</td></tr><tr><td align="left">hexo deploy</td><td align="left">hexo d</td><td align="left">部署网站</td></tr><tr><td align="left">hexo clean</td><td align="left">hexo cl</td><td align="left">清除缓存和已经生成的静态文件</td></tr></tbody></table><p>一般情况，我们先依次输入<code>hexo clean</code>、 <code>hexo g</code> 、 <code>hexo s</code> ，没问题再 <code>hexo d</code>就行。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="图片未显示"><a href="#图片未显示" class="headerlink" title="图片未显示"></a>图片未显示</h3><ol><li><strong>图片名</strong>和<strong>路径</strong>不能有空格</li><li>本地图片要<strong>相对路径</strong> 以blog为根目录</li></ol><p>typora + hexo</p><p>在Front-matter加上</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typora-root-url: ..</span><br></pre></td></tr></table></figure><p><img src="/images/WriteOnHexo/root.png" alt="root"></p><p>写作时把图片拖入即可</p><p><img src="/images/WriteOnHexo/write.png" alt="write"></p><p>解释：在source下创建images放所有文章图片 WriteOnHexo是本文的图片文件夹， 拖入即可显示，并且网站上也可正常显示</p><p>markdown具体如下</p><p><img src="/images/WriteOnHexo/concrete.png" alt="concrete"></p><h3 id="数学表达式乱码"><a href="#数学表达式乱码" class="headerlink" title="数学表达式乱码"></a>数学表达式乱码</h3><p>需要安装和配置 hexo-math 具体可看他人教程</p>]]></content>
      
      
      <categories>
          
          <category> Build blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地hexo部署</title>
      <link href="/2023/12/02/Local%20Hexo/"/>
      <url>/2023/12/02/Local%20Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="本地hexo部署"><a href="#本地hexo部署" class="headerlink" title="本地hexo部署"></a>本地hexo部署</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>Git下载地址：<a href="https://git-scm.com/download/">https://git-scm.com/download/</a></p><p><img src="/images/LocalHexo/gitdownload.png" alt="gitdownload"></p><p>直接安装即可，网站会自动匹配合适版本（一直点next， 安装位置可自定义）</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>Node.js下载地址： <a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><p><img src="/images/LocalHexo/nodejsdownload.png" alt="nodejsdownload"></p><p>选择合适的installer直接安装即可</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>新建文件夹blog</p><p>该<strong>blog文件夹作为blog根目录</strong>， 此后所有git bash 都在这操作</p><p><strong>blog内</strong>右键可以看到 git bash here</p><p><img src="/images/LocalHexo/gitbash.png" alt="gitbash"></p><p>安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="/images/LocalHexo/hexodownload.png" alt="hexodownload"></p><p>初始化hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="/images/LocalHexo/hexoinit.png" alt="hexoinit"></p><p>安装相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="/images/LocalHexo/hexoinstall.png" alt="hexoinstall"></p><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="/images/LocalHexo/hexostart.png" alt="hexostart"></p><p>输入后可以看到这个本地静态网站open即可</p><p><img src="/images/LocalHexo/hexolocal.png" alt="hexolocal"></p><p>网站界面可以用butterfly 和 Next 美化</p><p><img src="/images/LocalHexo/webpage.png" alt="webpage"></p><p>利用butterfly美化后，具体可参考</p><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> Build blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frieren and Rotating Calipers</title>
      <link href="/2023/12/01/Frieren%20and%20Rotating%20Calipers/"/>
      <url>/2023/12/01/Frieren%20and%20Rotating%20Calipers/</url>
      
        <content type="html"><![CDATA[<h1 id="Frieren-and-Rotating-Calipers"><a href="#Frieren-and-Rotating-Calipers" class="headerlink" title="Frieren and Rotating Calipers"></a><a href="https://www.luogu.com.cn/problem/U382825">Frieren and Rotating Calipers</a></h1><p><strong>时间限制：1s</strong><br><strong>空间限制：256MB</strong></p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>​芙莉莲正在学习旋转卡壳，但是字不会念，你能告诉她正确的读音吗？</p><p>学习过程中看到最小矩形覆盖问题，即给你<strong>n</strong>个点，求最小的矩形使得覆盖所有点。她发现最小的矩形的长和宽不一定与$x$轴，$y$轴平行，她认为这些矩形非常无聊，你能找到面积最小的<strong>有趣矩形</strong>使得覆盖所有点吗？</p><p><strong>有趣矩形</strong>：长和宽与$x$轴或$y$轴平行的矩形</p><h3 id="Input-Description"><a href="#Input-Description" class="headerlink" title="Input Description"></a>Input Description</h3><p>第一行一个正整数<strong>T</strong>表示测试数 $1 \le T \le 10^2$</p><p>每个测试的第一行有一个正整数<strong>n</strong>表示点的数量 $1 \le n \le 10^4$</p><p>每个测试接下来有n行，每行两个整数 $(x, y) $   $0 \le x \le 10^4 $，$0 \le y \le 10^4 $</p><h3 id="Output-Description"><a href="#Output-Description" class="headerlink" title="Output Description"></a>Output Description</h3><p>每行输出符合条件的<strong>有趣矩形</strong>的面积</p><h3 id="Input-Sample"><a href="#Input-Sample" class="headerlink" title="Input Sample"></a>Input Sample</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">0 0</span><br><span class="line">1 0</span><br><span class="line">0 1</span><br><span class="line">4</span><br><span class="line">0 0</span><br><span class="line">1 0</span><br><span class="line">0 1</span><br><span class="line">1 1</span><br></pre></td></tr></table></figure><h3 id="Output-Sample"><a href="#Output-Sample" class="headerlink" title="Output Sample"></a>Output Sample</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> SCUT校赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frieren Beyond Journey&#39;s End</title>
      <link href="/2023/12/01/Frieren%20Beyond%20Journey&#39;s%20End/"/>
      <url>/2023/12/01/Frieren%20Beyond%20Journey&#39;s%20End/</url>
      
        <content type="html"><![CDATA[<h1 id="Frieren-Beyond-Journey’s-End"><a href="#Frieren-Beyond-Journey’s-End" class="headerlink" title="Frieren Beyond Journey’s End"></a><a href="https://www.luogu.com.cn/problem/U367574">Frieren Beyond Journey’s End</a></h1><p><strong>时间限制：1s</strong><br><strong>空间限制：256MB</strong></p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>&emsp;&emsp;芙莉莲热衷周游各方搜集奇怪的魔法，某一天她得到一个有趣的魔法公式,  </p><p>$$<br> \sum_{i&#x3D;1}^n\sum_{l&#x3D;1}^i\sum_{r&#x3D;i}^n\sum_{k&#x3D;l}^r a_k<br>$$</p><p>同时为此搜集了<strong>n</strong>个魔法单元。由于种族的长寿天性导致她对时间的感觉不同于一般人，所以她请求你来帮忙。她估算结果可能很大，请你告诉她结果对<strong>1000000007</strong>取余后的数</p><h3 id="Input-Description"><a href="#Input-Description" class="headerlink" title="Input Description"></a>Input Description</h3><p>第一行一个正整数<strong>T</strong>表示测试数 $ 1 \le T \le 10^5 $</p><p>每个测试的第一行有一个正整数<strong>n</strong>表示魔法单元的数量 $ 1 \le n \le 10^5 $</p><p>每个测试的第二行有<strong>n</strong>个整数 $ a_1, a_2, … , a_n  \quad 0 \le a_i \le 10^9 $</p><p>题目保证总的所有n的和不会超过 $ 2 \times 10^5 $</p><h3 id="Output-Description"><a href="#Output-Description" class="headerlink" title="Output Description"></a>Output Description</h3><p>对于每个测试输出一个整数 即结果对  $ 1000000007 $ 取余后的数</p><h3 id="Input-Sample"><a href="#Input-Sample" class="headerlink" title="Input Sample"></a>Input Sample</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">2 0 2 3</span><br><span class="line">4</span><br><span class="line">1 0 2 5</span><br></pre></td></tr></table></figure><h3 id="Output-Sample"><a href="#Output-Sample" class="headerlink" title="Output Sample"></a>Output Sample</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">80</span><br><span class="line">90</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
          <category> SCUT校赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>usage</title>
      <link href="/2023/12/01/usage/"/>
      <url>/2023/12/01/usage/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Load-images"><a href="#Load-images" class="headerlink" title="Load images"></a>Load images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h3 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [1, 2, 3] //标签1， 2， 3</span><br></pre></td></tr></table></figure><h3 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a>Categories</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories: //分类 </span><br><span class="line">-[1]//属于分类1</span><br><span class="line">-[2]//属于分类1</span><br><span class="line">-[3, 4]//属于分类3下的分类4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>About</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Movies</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
